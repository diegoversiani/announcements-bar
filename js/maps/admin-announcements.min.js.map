{"version":3,"sources":["polyfill-closest.js","admin-announcements.js"],"names":["Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","this","ancestor","document","documentElement","contains","parentElement","init","addEventListener","handleDocumentClick","e","target","addAnnouncement","removeAnnouncement","preventDefault","announcementRow","newAnnouncementRow","cloneNode","newInput","querySelector","value","parentNode","insertBefore","nextSibling","qtdRows","querySelectorAll","length","input","removeChild","window"],"mappings":"CASA,WACAA,QAAAC,UAAAC,UACAF,QAAAC,UAAAC,QAAAF,QAAAC,UAAAE,mBACAH,QAAAC,UAAAG,uBAEAJ,QAAAC,UAAAI,UACAL,QAAAC,UAAAI,QAAA,SAAAC,GACA,GAAAC,GAAAC,KACAC,EAAAD,IACA,KAAAE,SAAAC,gBAAAC,SAAAL,GAAA,MAAA,KACA,GAAA,CACA,GAAAE,EAAAP,QAAAI,GAAA,MAAAG,EACAA,GAAAA,EAAAI,oBACA,OAAAJ,EACA,OAAA,WCdA,WAEA,YAQA,SAAAK,KACAJ,SAAAK,iBAAA,QAAAC,GASA,QAAAA,GAAAC,GAEAA,EAAAC,OAAAb,QAAA,gBACAc,EAAAF,GAIAA,EAAAC,OAAAb,QAAA,mBACAe,EAAAH,GASA,QAAAE,GAAAF,GACAA,EAAAI,gBAEA,IAAAC,GAAAL,EAAAC,OAAAb,QAAA,yBAGAkB,EAAAD,EAAAE,WAAA,GACAC,EAAAF,EAAAG,cAAA,kDACAD,GAAAE,MAAA,GAGAL,EAAAM,WAAAC,aAAAN,EAAAD,EAAAQ,aASA,QAAAV,GAAAH,GACAA,EAAAI,gBAEA,IAAAC,GAAAL,EAAAC,OAAAb,QAAA,yBACA0B,EAAAT,EAAAM,WAAAI,iBAAA,yBAAAC,MAGA,IAAA,GAAAF,EAAA,CAEA,GAAAG,GAAAZ,EAAAI,cAAA,kDACAQ,GAAAP,MAAA,OAKAL,GAAAM,WAAAO,YAAAb,GAnEAc,OAAArB,iBAAA,OAAAD","file":"../admin-announcements.min.js","sourcesContent":["/**\n * File polyfill-closest.js.\n *\n * Extend browser support for Element.closest and Element.matches all the way back to IE9.\n *\n * Author: MDN\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n */\n\n(function () {\n  if (!Element.prototype.matches)\n    Element.prototype.matches = Element.prototype.msMatchesSelector || \n                                Element.prototype.webkitMatchesSelector;\n\n  if (!Element.prototype.closest)\n    Element.prototype.closest = function(s) {\n        var el = this;\n        var ancestor = this;\n        if (!document.documentElement.contains(el)) return null;\n        do {\n            if (ancestor.matches(s)) return ancestor;\n            ancestor = ancestor.parentElement;\n        } while (ancestor !== null); \n        return null;\n    };\n})();\n","/**\n * File admin-announcements.js.\n *\n * Initialize announcements bar admin backend view.\n *\n * Author: Diego Versiani\n * Contact: https://diegoversiani.me/\n */\n\n(function(){\n\n  'use strict';\n\n  // Run initialize on pageload\n  window.addEventListener( 'load', init );\n\n  /**\n   * Initialize component and set related handlers\n   */\n  function init() {\n    document.addEventListener( 'click', handleDocumentClick );\n  };\n\n\n\n  /**\n   * Detects clicks to add or remove announcement buttons.\n   * @param  Object e Click event data.\n   */\n  function handleDocumentClick( e ) {\n    // Add announcement\n    if ( e.target.closest( '.button-add' ) ) {\n      addAnnouncement(e);\n    }\n\n    // Remove announcement\n    if ( e.target.closest( '.button-remove' ) ) {\n      removeAnnouncement(e);\n    }\n  };\n\n\n  /**\n   * Add announcement row to the view.\n   * @param  Object e Click event data.\n   */\n  function addAnnouncement( e ) {\n    e.preventDefault();\n\n    var announcementRow = e.target.closest( '.announcement-content' );\n\n    // Clone announcement row and change it's attributes\n    var newAnnouncementRow = announcementRow.cloneNode( true );\n    var newInput = newAnnouncementRow.querySelector( 'input[name=\"post_meta[announcement-content][]\"]' );\n    newInput.value = '';\n\n    // Add new row bellow\n    announcementRow.parentNode.insertBefore( newAnnouncementRow, announcementRow.nextSibling);\n  };\n\n\n\n  /**\n   * Remove announcement row to the view.\n   * @param  Object e Click event data.\n   */\n  function removeAnnouncement( e ) {\n    e.preventDefault();\n\n    var announcementRow = e.target.closest( '.announcement-content' );\n    var qtdRows = announcementRow.parentNode.querySelectorAll( '.announcement-content' ).length;\n    \n    // Last row\n    if ( qtdRows == 1 ) {\n      // Clear input value\n      var input = announcementRow.querySelector( 'input[name=\"post_meta[announcement-content][]\"]' );\n      input.value = '';\n    }\n    // Not last row\n    else {\n      // Remove row\n      announcementRow.parentNode.removeChild( announcementRow );\n    }\n  };\n\n})();\n"]}